import asyncio
import threading

from vk_api.longpoll import VkLongPoll, VkEventType
from Database.CommandDbWorker import CommandWorker
from Database.UserDbWorker import UserWorker
from StartupLoader.StartupLoader import StartupLoader
import vk_api
import random
import math
import sched, time

# –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
config_loader = StartupLoader('config.JSON')

admin_id_int = config_loader.get_admin_id()

# –°–æ–∑–¥–∞–Ω–∏–µ –ë–î –≤–æ—Ä–∫–µ—Ä–æ–≤
user_worker = UserWorker()
command_worker = CommandWorker()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏—Å—Ç–æ–≤ –∏–∑ –ë–î
commands = command_worker.select_all()
users = user_worker.select_all()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è vk_api
vk_session = vk_api.VkApi(token=config_loader.get_vk_token())
session_api = vk_session.get_api()
long_poll = VkLongPoll(vk_session)

# –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —ç–∫—Å–ø—ã



dict_of_levels = {
    1: 1000,
    2: 2700,
    3: 8900,
    4: 20000,
    5: 54590,
    6: 148400,
    7: 1000000
}


def send_message(vk_session, id_type, id, message=None, attachment=None, keyboard=None):
    vk_session.method('messages.send',
                      {id_type: id, 'message': message, 'random_id': random.randint(-2147483648, +2147483648),
                       "attachment": attachment, 'keyboard': keyboard})


"""–í–æ–∑–≤—Ç—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ —É —á–µ–ª–æ–≤–µ–∫–∞ –¥–æ—Å—Ç—É–ø —Ç–∞–∫–æ–π –∂–µ –∏–ª–∏ –≤—ã—à–µ, –≤ –∏–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö False"""


def is_permitted(vk_id: int, required_level: int):
    for user in users:
        if user['vk_id'] == int(vk_id):
            return user['access_level'] >= required_level
    return False


def get_pictures(vk_session, id_group, vk):
    try:
        attachment = ''
        max_num = vk.photos.get(owner_id=id_group, album_id='wall', count=0)['count']
        num = random.randint(1, max_num)
        pictures = vk.photos.get(owner_id=str(id_group), album_id='wall', count=1, offset=num)['items']
        buf = []
        for element in pictures:
            buf.append('photo' + str(id_group) + '_' + str(element['id']))
        print(buf)
        attachment = ','.join(buf)
        print(type(attachment))
        print(attachment)
        return attachment
    except:
        return get_pictures(vk_session, id_group, vk)


def distribution_func(value: int):
    if value < 50:
        return 5 * math.sin(2 * math.pi * value - math.pi / 2) + 6.2
    else:
        return 6 / value


async def longpoolHandle():
    user_spam_coeffs = dict(zip([user['vk_id'] for user in users], [1] * len(users)))
    counter_of_messages = 0
    for event in long_poll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            counter_of_messages += 1
            #TODO REWRITE IT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! (without message or more logics from)
            if counter_of_messages >= 150:
                user_spam_coeffs = dict(zip([user['vk_id'] for user in users], [1] * len(users)))
                counter_of_messages = 0
            response = event.text
            current_user = {'access_level': 0,
                            'vk_id': None,
                            'association': "Unknown",
                            'lvl_exp': 0}
            if event.from_chat:
                for user in users:
                    if user['vk_id'] == int(event.extra_values['from']):
                        current_user = user
                        if user['access_level'] < 8:
                            coef = 2
                            user['lvl_exp'] += distribution_func(len(event.text.split(' '))) / coef * \
                                               user_spam_coeffs[user['vk_id']]
                            if user_spam_coeffs[user['vk_id']] > 0.7:
                                user_spam_coeffs[user['vk_id']] -= 0.03
                            else:
                                user_spam_coeffs[user['vk_id']] *= 0.57
                            print(user_spam_coeffs[user['vk_id']])
                            if user['lvl_exp'] >= dict_of_levels[user['access_level']]:
                                user['lvl_exp'] = 0
                                # level up
                                user['access_level'] += 1
                                send_message(vk_session, 'chat_id', event.chat_id, "@id" + event.extra_values['from']
                                             + "–ê–ø–Ω—É–ª " + str(user['access_level']) + '–ª–µ–≤–µ–ª!')
                                # TODO bd.update(user['vk_id], user['access_level'])

            for item in commands:
                if item['name'] == event.text:
                    # from chat
                    send_message(vk_session, 'chat_id', event.chat_id, item['value'])

            if event.text == "!–∫–∞–º–Ω–∏":
                send_message(vk_session, 'chat_id', event.chat_id,
                             'üóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóø' +
                             'üóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóøüóø')
            if event.text == "!vkbot":
                send_message(vk_session, 'chat_id', event.chat_id,
                             '–ö–æ–º–º–∞–Ω–¥—ã –±–æ—Ç–∞ –ò–ª—å–∏: \n >>>>>>>>>>>>>>>>>>>> \n <<–ö–û–ú–ê–ù–î–´>> \n  ' +
                             '\n ‚Ä¢!—à–∞–Ω—Å ---->—É–∑–Ω–∞—Ç—å —à–∞–Ω—Å —á–µ–≥–æ-–ª–∏–±–æ \n ‚Ä¢!—à–∞—Ä --->–≤–æ–ø—Ä–æ—Å, –ø–æ—Å–ª–µ —á–µ–≥–æ –±—É–¥–µ—Ç ' +
                             '–≤—ã–¥–∞–Ω –æ—Ç–≤–µ—Ç \n  \n <<–†–ê–ù–î–û–ú –ê–ù–ò–ú–ï –ê–†–¢–´>> \n  \n ‚Ä¢!–ª–æ–ª–∏ \n ‚Ä¢!—é—Ä–∏ \n ‚Ä¢!–∞—Ö–µ–≥–∞–æ ' +
                             '\n ‚Ä¢!—Ñ–µ–π—Ç –ø—Ä–∏–∫–æ–ª \n ‚Ä¢!—Ñ–µ–π—Ç –∞—Ä—Ç \n ‚Ä¢!–∫–∞–º—à–æ—Ç \n \n <<3–î –¢–Ø–ù–ö–ò –ò –ù–ï –¢–û–õ–¨–ö–û>> \n  \n' +
                             ' ‚Ä¢!3–¥ –º—É—Å–æ—Ä \n ‚Ä¢!–∫—É–∫–ª–∞ \n \n <<–¢–û–°–ê–ö–ê –†–ò–ù>> \n \n ‚Ä¢!—Ç–æ—Å–∞–∫–∞ \n ‚Ä¢!—Ç–æ—Å–∞–∫–∞2 ---> —Ö–µ–Ω—Ç–∞–π' +
                             ' \n ‚Ä¢!–∏—à—Ç–∞—Ä \n ‚Ä¢!—ç—Ä–∏—à  \n \n <<–ü–†–û–ß–ï–ï –ì–û–í–ù–û>> \n \n ‚Ä¢!–∫–∞–º–Ω–∏ \n ' +
                             '‚Ä¢!–ø–∞–ª–∞—Ç–∞ —à–µ–≤—Ü–æ–≤–∞ \n ‚Ä¢!—Ö—É–µ—Å–æ—Å–∏–Ω–∞ \n ‚Ä¢!–∫–æ–ª–¥–∞ \n ‚Ä¢!–º—É–∑—ã–∫–∞ \n ‚Ä¢!—Ä–∞–¥–º–∏—Ä \n ‚Ä¢!–∫–ª–æ—É–Ω',
                             attachment='photo564230346_457239307')
            if event.text == "!–ª–æ–ª–∏":
                code = [-127518015, -157516431]
                attachment = get_pictures(vk_session, random.choice(code), session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –¥–µ–≤–æ—á–∫—É!', attachment)
            if event.text == "!—é—Ä–∏":
                code = [-153284406, -157516431]
                attachment = get_pictures(vk_session, random.choice(code), session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –ª–µ—Å–±—É—Ö!', attachment)
            if event.text == "!–∞—Ö–µ–≥–∞–æ":
                attachment = get_pictures(vk_session, -128535882, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –∞—Ö–µ–≥–∞–æ, –∫–æ–Ω—á–µ–Ω—ã–π –∏–∑–≤—Ä–∞—â–µ–Ω–µ—Ü!', attachment)
            if event.text == "!–ø–∞–ª–∞—Ç–∞ —à–µ–≤—Ü–æ–≤–∞":
                attachment = get_pictures(vk_session, -88245281, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –º–µ–º –∏–∑ –ø–∞–ª–∞—Ç—ã –®–µ–≤—Ü–æ–≤–∞!', attachment)
            if event.text == "!—Ñ–µ–π—Ç –ø—Ä–∏–∫–æ–ª":
                attachment = get_pictures(vk_session, -183563128, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –º–µ–º –∏–∑ –≥—Ä—É–ø–ø—ã Fate/Grand–ü—Ä–∏–∫–æ–ª!', attachment)
            if event.text == "!—Ñ–µ–π—Ç –∞—Ä—Ç":
                attachment = get_pictures(vk_session, -191752227, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –∞—Ä—Ç –∏–∑ –≥—Ä—É–ø–ø—ã far side of the moon!',
                             attachment)
            if event.text == "!3–¥ –º—É—Å–æ—Ä":
                attachment = get_pictures(vk_session, -70232735, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ —Å–≤–æ–π 3–¥ –º—É—Å–æ—Ä!', attachment)
            if event.text == "!–∫—É–∫–ª–∞":
                attachment = get_pictures(vk_session, -186765691, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ —Å–≤–æ—é –∫—É–∫–ª—É, –∫—É–∫–ª–æ—ë–±!', attachment)
            if event.text == "!—Ö—É–µ—Å–æ—Å–∏–Ω–∞":
                send_message(vk_session, 'chat_id', event.chat_id, attachment='video210923765_456239281')
            if event.text == "!–∫–æ–ª–¥–∞":
                send_message(vk_session, 'chat_id', event.chat_id, attachment='video537612639_456239020')
            if event.text == "!–º—É–∑—ã–∫–∞":
                send_message(vk_session, 'chat_id', event.chat_id,
                             attachment='audio564230346_456239018,audio564230346_456239019,audio564230346_456239017')
            if event.text == "!—Ç–æ—Å–∞–∫–∞":
                attachment = get_pictures(vk_session, -119603422, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –¢–æ—Å–∞–∫—É!', attachment)
            if event.text == "!—Ç–æ—Å–∞–∫–∞2":
                attachment = get_pictures(vk_session, -119603422, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ —Ö–µ–Ω—Ç–∞–π–Ω—É—é –¢–æ—Å–∞–∫—É!', attachment)
            if event.text == "!–∏—à—Ç–∞—Ä":
                code = [-119603422, -88245281]
                attachment = get_pictures(vk_session, random.choice(code), session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –ò—à—Ç–∞—Ä!', attachment)
            if event.text == "!—ç—Ä–∏—à":
                attachment = get_pictures(vk_session, -119603422, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ –≠—Ä–µ—à–∫–∏–≥–∞–ª—å!', attachment)
            if event.text == "!—Ä–∞–¥–º–∏—Ä":
                send_message(vk_session, 'chat_id', event.chat_id, attachment='photo564230346_457239374')
            if event.text == "!–∫–ª–æ—É–Ω":
                send_message(vk_session, 'chat_id', event.chat_id, attachment='photo564230346_457239422')

            if event.text == "!–∫–∞–º—à–æ—Ç":
                attachment = get_pictures(vk_session, -2343758, session_api)
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ —Ä–∞–Ω–¥–æ–º —Å–∫—Ä–∏–Ω—à–æ—Ç!', attachment)
            if event.text == "!–∫—Ç–æ":
                if event.from_chat:
                    val = random.choice((vk_session.method('messages.getChat', {'chat_id': event.chat_id}))['users'])
                    send_message(vk_session, 'peer_id', event.peer_id, "@id" + str(val))
            if event.text == "!gvn":
                huy = vk_session.method('video.get', {'owner_id': '-164489758', 'count': 200, 'offset': 1})['items']
                qwert = random.choice(list(i for i in huy))
                send_message(vk_session, 'peer_id', event.peer_id, '–î–µ—Ä–∂–∏ gvn!',
                             attachment='video' + str(-164489758) + '_'
                                        + str(qwert['id']))
            if event.text == '!—Å—Ç–∞—Ç—É—Å':
                # TODO WTF rewrite it
                found = False
                for user in users:
                    if str(user['vk_id']) == event.extra_values['from']:
                        send_message(vk_session, 'chat_id', event.chat_id, "–í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ " +
                                     user['association'] + " –∏ –≤–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: " +
                                     str(user['access_level']) + 'lvl –∏ ' + str(round(user['lvl_exp'], 2)) + '–æ–ø—ã—Ç–∞')
                        found = True
                if not found:
                    send_message(vk_session, 'chat_id', event.chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã ;d" +
                                 " —á—Ç–æ–±—ã —Ä–∞–∑–µ–≥–∞—Ç—å—Å—è —é–∑–∞–π !regme <–Ω–∏–∫>")
            spaced_words = str(response).split(' ')

            if spaced_words[0] == '!—à–∞–Ω—Å' and len(spaced_words) > 1:
                send_message(vk_session, 'peer_id', event.peer_id,
                             '–®–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ ' + ' '.join(spaced_words[1:]) + ' - '
                             + str(random.randint(1, 100)) + '%')
            if spaced_words[0] == '!—à–∞—Ä':
                send_message(vk_session, 'peer_id', event.peer_id, '–ú–æ–π –æ—Ç–≤–µ—Ç - ' +
                             str(random.choice(["–î–∞",
                                                "–ù–µ—Ç",
                                                "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ",
                                                "–í –¥—É—à–µ –Ω–µ –µ–±—É –µ—Å–ª–∏ —á–µ—Å—Ç–Ω–æ",
                                                "–î–∞, —ç—Ç–æ –ø—Ä—è–º 100%",
                                                "–Ω–µ—Ç,—Ç—ã —á—ë —à–∏–∑–æ–∏–¥?"])) + ' ')

            """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π """
            if spaced_words[0] == '!regme' and len(spaced_words) == 2:
                if (spaced_words[1] not in list(i['association'] for i in users)) or \
                        (int(event.extra_values['from']) not in list(i['vk_id'] for i in users)):
                    if admin_id_int != int(event.extra_values['from']):
                        user_worker.insert(1, event.extra_values['from'], spaced_words[1])
                        users.insert(0, {
                            'access_level': 1,
                            'vk_id': event.extra_values['from'],
                            'association': spaced_words[1]})
                        send_message(vk_session, 'chat_id', event.chat_id, "–≤—ã –∑–∞—Ä–µ–≥–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å! –í–∞—à –Ω–∏–∫: "
                                     + spaced_words[1] + " –∏ —É—Ä–æ–≤–µ–Ω—å 1 :)")
                    else:
                        user_worker.insert(10, event.extra_values['from'], spaced_words[1])
                        users.insert(0, {
                            'access_level': 10,
                            'vk_id': event.extra_values['from'],
                            'association': spaced_words[1]})
                    send_message(vk_session, 'chat_id', event.chat_id, "–≤—ã –∑–∞—Ä–µ–≥–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å –∞–¥–º–∏–Ω–æ–º! –í–∞—à –Ω–∏–∫: "
                                 + spaced_words[1] + " –∏ —É—Ä–æ–≤–µ–Ω—å 10 (max) :)")
                elif int(event.extra_values['from']) in list(i['vk_id'] for i in users):
                    send_message(vk_session, 'chat_id', event.chat_id, "–í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã :c")
                    # TODO –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∞–Ω–¥—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏
                else:
                    send_message(vk_session, 'chat_id', event.chat_id, "–ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è –∑–∞–Ω—è—Ç–∞")

            if response == "!delme":
                if int(event.extra_values['from']) in list(i['vk_id'] for i in users):
                    index = list(i['vk_id'] for i in users).index(int(event.extra_values['from']))
                    user_worker.delete(int(event.extra_values['from']))
                    users.pop(index)
                else:
                    print("cannot do it")
            if spaced_words[0] == '!rename' and len(spaced_words) == 3:
                if is_permitted(event.extra_values['from'], 1):
                    for pgr in users:
                        if pgr['association'] == spaced_words[1]:
                            index = list(i['association'] for i in users).index(spaced_words[1])
                            commands.pop(index)
                            users[index] = {
                                'access_level': 1,
                                'vk_id': pgr['vk_id'],
                                'association': spaced_words[2]}
                            user_worker.update(pgr['vk_id'], spaced_words[2], 1)
                            send_message(vk_session, 'chat_id', event.chat_id,
                                         "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã —Ç–µ–ø–µ—Ä—å: " + spaced_words[2] + ".\n –ò –≤–∞—à —É—Ä–æ–≤–µ–Ω—å: 2")
                else:
                    send_message(vk_session, 'chat_id', event.chat_id, "–¢—ã –∫—Ç–æ —Ç–∞–∫–æ–π —Å—É–∫–∞?")

            """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥ """
            # TODO –¥–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–≤–Ω–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å —é–∑–µ—Ä–æ–≤
            if spaced_words[0] == '!addcom' and len(spaced_words) >= 3:
                if is_permitted(int(event.extra_values['from']), 5):
                    if spaced_words[1] == spaced_words[2]:
                        send_message(vk_session, 'chat_id', event.chat_id, "–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —ç—Ö–æ-–∫–æ–º–º–∞–Ω–¥—É")
                    elif spaced_words[1] in list(i['name'] for i in commands):
                        send_message(vk_session, 'chat_id',
                                     event.chat_id, "–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—É—é –∫–æ–º–º–∞–Ω–¥—É")
                    else:
                        command_worker.insert(10, spaced_words[1], ' '.join(spaced_words[2:]))
                        commands.insert(0, {
                            'access_level': 10,
                            'name': spaced_words[1],
                            'value': ' '.join(spaced_words[2:])})

                        send_message(vk_session, 'chat_id', event.chat_id,
                                     "–ö–æ–º–º–∞–Ω–¥–∞ " + spaced_words[1] + " –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
                else:
                    send_message(vk_session, 'chat_id', event.chat_id, "Permission denied, required level to access: 5")

            if spaced_words[0] == '!delcom' and len(spaced_words) == 2:
                if is_permitted(event.extra_values['from'], 5):
                    for item in commands:
                        if item['name'] == spaced_words[1]:
                            command_worker.delete(spaced_words[1])
                            index = list(i['name'] for i in commands).index(spaced_words[1])
                            commands.pop(index)
                            send_message(vk_session, 'chat_id', event.chat_id,
                                         "–ö–æ–º–º–∞–Ω–¥–∞ " + spaced_words[1] + " —É–¥–∞–ª–µ–Ω–∞!")
                            break
                else:
                    send_message(vk_session, 'chat_id', event.chat_id, "Permission denied, required level to access: 5")


async def main():
    await longpoolHandle()


asyncio.run(main())
